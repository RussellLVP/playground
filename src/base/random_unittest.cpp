/**
 * Copyright (c) 2006-2014 Las Venturas Playground
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the
 * GNU General Public License as published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
 * even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with this program.
 * If not, see <http://www.gnu.org/licenses/>.
 */

#include "base/random.h"

#include "gtest/gtest.h"

#include <map>
#include <math.h>

// These tests test the distribution of numbers generated by the Random generator. Because the data
// generated by the PRNG is.. well, pseudo-random, these tests can end up being flaky if they're too
// strict. We therefore only check whether there is no massive spike in the distribution.

TEST(RandomTest, TestDouble) {
  std::map<double, int> result_map;
  for (int i = 0; i < 5000; ++i)
    ++result_map[floor(Random::Next() * 100) / 100];

  EXPECT_GT(result_map.size(), 95u);
  for (auto& entry : result_map)
    EXPECT_LT(entry.second, 150);
}

TEST(RandomTest, TestInteger) {
  std::map<int, int> result_map;
  for (int i = 0; i < 5000; ++i)
    ++result_map[Random::Next(0, 100)];

  EXPECT_GT(result_map.size(), 95u);
  for (auto& entry : result_map)
    EXPECT_LT(entry.second, 150);
}
